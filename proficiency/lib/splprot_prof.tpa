//Values
//Simple (PROFICIENCYBASTARDSWORD)   (equals) %sim_eq%
//Simple (PROFICIENCYBASTARDSWORD)   (greater)%sim_gr%
//Simple (PROFICIENCYBASTARDSWORD)   (lesser) %sim_ls%
//Sword (PROFICIENCYLONGSWORD)       (equals) %swd_eq%
//Sword (PROFICIENCYLONGSWORD)       (greater)%swd_gr%
//Sword (PROFICIENCYLONGSWORD)       (lesser) %swd_ls%
//misc (PROFICIENCYSHORTSWORD)       (equals) %misc_eq%
//misc (PROFICIENCYSHORTSWORD)       (less)   %misc_ls%
//misc (PROFICIENCYSHORTSWORD)       (greater)%misc_gr%
//Axe (PROFICIENCYAXE)               (equals) %axe_eq%
//Axe (PROFICIENCYAXE)               (less)   %axe_ls%
//Axe (PROFICIENCYAXE)               (greater)%axe_gr%
//G.sword (PROFICIENCYTWOHANDEDSWORD)(equals) %gsd_eq%
//G.sword (PROFICIENCYTWOHANDEDSWORD)(greater)%gsd_gr%
//G.sword (PROFICIENCYTWOHANDEDSWORD)(less)   %gsd_ls%
//Polearm (PROFICIENCYKATANA)	     (equals) %pam_eq%
//Polearm (PROFICIENCYKATANA)	     (less)   %pam_ls%
//Polearm (PROFICIENCYKATANA)	(    (greater)%pam_gr%
//Blunt   (PROFICIENCYSCIMITAR...)   (equals) %bnt_eq%
//Blunt   (PROFICIENCYSCIMITAR...)   (greater)%bnt_gr%
//Blunt   (PROFICIENCYSCIMITAR...)   (less)   %bnt_ls%
//Bows/Crossbows  (PROFICIENCYDAGGER)(equals) %rng_eq%
//Bows/Crossbows  (PROFICIENCYDAGGER)(greater)%rng_gr%
//Bows/Crossbows  (PROFICIENCYDAGGER)(lesser) %rng_ls%
//War Hammer

//Armors (PROFICIENCYCLUB)           (equals) %arm_eq%
//Armors (PROFICIENCYCLUB)           (less)   %arm_ls%
//Armors (PROFICIENCYCLUB)           (greater)%arm_gr%

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////          WEAPON PROFICIENCIES           //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

APPEND ~splprot.2da~ ~B_SIM_EQ%TAB%89%TAB%-1%TAB%1~  //Simple (PROFICIENCYBASTARDSWORD)   (equals) %sim_eq%
APPEND ~splprot.2da~ ~B_SIM_GR%TAB%89%TAB%-1%TAB%3~  //Simple (PROFICIENCYBASTARDSWORD)   (greater)%sim_gr%
APPEND ~splprot.2da~ ~B_SIM_LS%TAB%89%TAB%-1%TAB%2~  //Simple (PROFICIENCYBASTARDSWORD)   (lesser) %sim_ls%
APPEND ~splprot.2da~ ~B_SWD_EQ%TAB%90%TAB%-1%TAB%1~  //Sword (PROFICIENCYLONGSWORD)       (equals) %swd_eq%
APPEND ~splprot.2da~ ~B_SWD_GR%TAB%90%TAB%-1%TAB%3~  //Sword (PROFICIENCYLONGSWORD)       (greater)%swd_gr%
APPEND ~splprot.2da~ ~B_SWD_LS%TAB%90%TAB%-1%TAB%2~  //Sword (PROFICIENCYLONGSWORD)       (lesser) %swd_ls%
APPEND ~splprot.2da~ ~B_MISC_EQ%TAB%91%TAB%-1%TAB%1~ //misc (PROFICIENCYSHORTSWORD)       (equals) %misc_eq%
APPEND ~splprot.2da~ ~B_MISC_LS%TAB%91%TAB%-1%TAB%2~ //misc (PROFICIENCYSHORTSWORD)       (less)   %misc_ls%
APPEND ~splprot.2da~ ~B_MISC_GR%TAB%91%TAB%-1%TAB%3~ //misc (PROFICIENCYSHORTSWORD)       (greater)%misc_gr%
APPEND ~splprot.2da~ ~B_AXE_EQ%TAB%92%TAB%-1%TAB%1~  //Axe (PROFICIENCYAXE)               (equals) %axe_eq%
APPEND ~splprot.2da~ ~B_AXE_LS%TAB%92%TAB%-1%TAB%2~  //Axe (PROFICIENCYAXE)               (less)   %axe_ls%
APPEND ~splprot.2da~ ~B_AXE_GR%TAB%92%TAB%-1%TAB%3~  //Axe (PROFICIENCYAXE)               (greater)%axe_gr%
APPEND ~splprot.2da~ ~B_GSD_EQ%TAB%93%TAB%-1%TAB%1~  //G.sword (PROFICIENCYTWOHANDEDSWORD)(equals) %gsd_eq%
APPEND ~splprot.2da~ ~B_GSD_GR%TAB%93%TAB%-1%TAB%3~  //G.sword (PROFICIENCYTWOHANDEDSWORD)(greater)%gsd_gr%
APPEND ~splprot.2da~ ~B_GSD_LS%TAB%93%TAB%-1%TAB%2~  //G.sword (PROFICIENCYTWOHANDEDSWORD)(less)   %gsd_ls%
APPEND ~splprot.2da~ ~B_PAM_EQ%TAB%94%TAB%-1%TAB%1~  //Polearm (PROFICIENCYKATANA)		  (equals) %pam_eq%
APPEND ~splprot.2da~ ~B_PAM_LS%TAB%94%TAB%-1%TAB%2~  //Polearm (PROFICIENCYKATANA)		  (less)   %pam_ls%
APPEND ~splprot.2da~ ~B_PAM_GR%TAB%94%TAB%-1%TAB%3~  //Polearm (PROFICIENCYKATANA)		  (greater)%pam_gr%
APPEND ~splprot.2da~ ~B_BNT_EQ%TAB%95%TAB%-1%TAB%1~  //Blunt   (PROFICIENCYSCIMITAR...)	  (equals) %bnt_eq%
APPEND ~splprot.2da~ ~B_BNT_GR%TAB%95%TAB%-1%TAB%3~  //Blunt   (PROFICIENCYSCIMITAR...)	  (greater)%bnt_gr%
APPEND ~splprot.2da~ ~B_BNT_LS%TAB%95%TAB%-1%TAB%2~  //Blunt   (PROFICIENCYSCIMITAR...)	  (less)   %bnt_ls%
APPEND ~splprot.2da~ ~B_RNG_EQ%TAB%96%TAB%-1%TAB%1~  //Ranged  (PROFICIENCYDAGGER)		  (equals) %rng_eq%
APPEND ~splprot.2da~ ~B_RNG_GR%TAB%96%TAB%-1%TAB%3~  //Ranged  (PROFICIENCYDAGGER)		  (greater)%rng_gr%
APPEND ~splprot.2da~ ~B_RNG_LS%TAB%96%TAB%-1%TAB%2~  //Ranged  (PROFICIENCYDAGGER)		  (lesser) %rng_ls%


COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_SIM_EQ~ BEGIN  //simple equal
         SET sim_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_SIM_GR~ BEGIN  //simple greater
         SET sim_gr = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_SIM_LS~ BEGIN  //simple less
         SET sim_ls = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_SWD_EQ~ BEGIN //sword equal
         SET swd_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_SWD_GR~ BEGIN //sword greater
         SET swd_gr = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_SWD_LS~ BEGIN //sword greater
         SET swd_ls = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_MISC_EQ~ BEGIN //misc equal
         SET misc_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_MISC_LS~ BEGIN //misc less
         SET misc_ls = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_MISC_GR~ BEGIN //misc greater
         SET misc_gr = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_AXE_EQ~ BEGIN  //axe equal
         SET axe_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_AXE_LS~ BEGIN  //axe less
         SET axe_ls = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_AXE_GR~ BEGIN  //axe less
         SET axe_gr = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_GSD_EQ~ BEGIN  //greatsword equal
         SET gsd_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_GSD_GR~ BEGIN  //greatsword greater
         SET gsd_gr = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_GSD_LS~ BEGIN  //greatsword less
         SET gsd_ls = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_PAM_EQ~ BEGIN  //polearm equal
         SET pam_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_PAM_LS~ BEGIN  //polearm less
         SET pam_ls = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_PAM_GR~ BEGIN  //polearm greater
         SET pam_gr = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_BNT_EQ~ BEGIN  //blunt equal
         SET bnt_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_BNT_GR~ BEGIN  //blunt greater
         SET bnt_gr = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_BNT_LS~ BEGIN  //blunt lesser
         SET bnt_ls = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_RNG_EQ~ BEGIN  //ranged equal
         SET rng_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_RNG_GR~ BEGIN  //ranged greater
         SET rng_gr = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_RNG_LS~ BEGIN  //ranged lesser
         SET rng_ls = %row%
      END
   END
BUT_ONLY

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////              ARMOR PROF                 //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


APPEND ~splprot.2da~ ~B_ARMOR_EQ%TAB%115%TAB%-1%TAB%1~  //Armors (PROFICIENCYCLUB) (equals)   %arm_eq%
APPEND ~splprot.2da~ ~B_ARMOR_LS%TAB%115%TAB%-1%TAB%2~  //Armors (PROFICIENCYCLUB) (less than)%arm_ls%
APPEND ~splprot.2da~ ~B_ARMOR_GR%TAB%115%TAB%-1%TAB%3~  //Armors (PROFICIENCYCLUB) (greater than)%arm_gr%

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_ARMOR_EQ~ BEGIN
         SET arm_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_ARMOR_LS~ BEGIN
         SET arm_ls = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_ARMOR_GR~ BEGIN
         SET arm_gr = %row%
      END
   END
BUT_ONLY

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////               ALCHEMY                   //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//for alchemy use
APPEND ~splprot.2da~ ~B_ALC_LS%TAB%101%TAB%-1%TAB%2~  //Alchemy/wpmace less than

//value found in parameter1 of your 326 effect

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_ALC_LS~ BEGIN  //less than alchemy
         SET alc_ls = %row%
      END
   END
BUT_ONLY


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////              ENDURANCE                  //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

APPEND ~splprot.2da~ ~B_END_EQ%TAB%98%TAB%-1%TAB%1~  //spear/endurance equal to
APPEND ~splprot.2da~ ~B_END_GR%TAB%98%TAB%-1%TAB%3~  //spear/endurance greater than



COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_END_EQ~ BEGIN  //con equal to
         SET end_eq = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_END_GR~ BEGIN  //con greater than
         SET end_gr = %row%
      END
   END
BUT_ONLY


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////                   HEAL                  //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//for heal use
APPEND ~splprot.2da~ ~B_HEA_EQ%TAB%99%TAB%-1%TAB%1~  //Heal (halberd) equal to
APPEND ~splprot.2da~ ~B_HEA_GR%TAB%99%TAB%-1%TAB%3~  //Heal (halberd) greater than
APPEND ~splprot.2da~ ~B_BJK_EQ%TAB%134%TAB%-1%TAB%1~  //Blackjack equal to
APPEND ~splprot.2da~ ~B_EXP_EQ%TAB%134%TAB%-1%TAB%1~  //Extraprof equal to
//value found in parameter1 of 326 effect


COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_BJK_EQ~ BEGIN  //blackjack equal to
         SET bjk_eq = %row%
      END
   END
BUT_ONLY


COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_HEA_EQ~ BEGIN  //wisdom equal to
         SET hea_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_HEA_GR~ BEGIN  //blackjack equal to
         SET hea_gr = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_EXP_EQ~ BEGIN  //extra prof equal to
         SET exp_eq = %row%
      END
   END
BUT_ONLY



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////                 HERBALISM               //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

APPEND ~splprot.2da~ ~B_HRB_EQ%TAB%134%TAB%-1%TAB%1~  //Herb (flail) equal to
APPEND ~splprot.2da~ ~B_HRB_LS%TAB%39%TAB%-1%TAB%2~  //Herb (flail) Less than
//value found in parameter1 of 326 effect

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_HRB_EQ~ BEGIN  //herbalism equal to
         SET hrb_eq = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_HRB_LS~ BEGIN  //herbalism less than
         SET hrb_ls = %row%
      END
   END
BUT_ONLY
