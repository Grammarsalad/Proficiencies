////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////                Not Outdoors             //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

APPEND ~splprot.2da~ ~NOTAREA%TAB%0x106%TAB%-1%TAB%9~  //Not this area

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~NOTAREA~ BEGIN  //not this area
         SET not_ar = %row%
      END
   END
BUT_ONLY

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////                Weapon Type              //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

APPEND ~splprot.2da~ ~SLASH%TAB%0x112%TAB%48%TAB%1~  //EYE_OF_THE_MIND (for testing--will prob need to create a new one)
APPEND ~splprot.2da~ ~BLUNT%TAB%0x112%TAB%49%TAB%1~  //EYE_OF_THE_SWORD (for testing--will prob need to create a new one)
APPEND ~splprot.2da~ ~STAB%TAB%0x112%TAB%50%TAB%1~  //EYE_OF_THE_MAGE (for testing--will prob need to create a new one)

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~SLASH~ BEGIN  //not this area
         SET sl_dam = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~BLUNT~ BEGIN  //not this area
         SET bl_dam = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~BLUNT~ BEGIN  //not this area
         SET pc_dam = %row%
      END
   END
BUT_ONLY


/*
APPEND ~splprot.2da~ ~B_CON_GR%TAB%41%TAB%-1%TAB%3~  //con Greater than
APPEND ~splprot.2da~ ~B_CON_EQ%TAB%41%TAB%-1%TAB%1~  //con equal to
APPEND ~splprot.2da~ ~B_CON_LS%TAB%41%TAB%-1%TAB%2~  //con Less than
APPEND ~splprot.2da~ ~B_WIS_GR%TAB%39%TAB%-1%TAB%3~  //Wisdom Greater than
APPEND ~splprot.2da~ ~B_WIS_EQ%TAB%39%TAB%-1%TAB%1~  //Wisdom equal to
APPEND ~splprot.2da~ ~B_WIS_LS%TAB%39%TAB%-1%TAB%2~  //Wisdom Less than
APPEND ~splprot.2da~ ~B_INT_EQ%TAB%38%TAB%-1%TAB%1~  //Intelligence equal to
APPEND ~splprot.2da~ ~B_INT_LS%TAB%38%TAB%-1%TAB%2~  //Int Less than
APPEND ~splprot.2da~ ~B_INT_GR%TAB%38%TAB%-1%TAB%3~  //Int Greater than

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_INT_EQ~ BEGIN  //int equal to
         SET int_eq = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_INT_LS~ BEGIN  //int equal to
         SET int_ls = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_INT_GR~ BEGIN  //int equal to
         SET int_gr = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_CON_EQ~ BEGIN  //con equal to
         SET con_eq = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_CON_LS~ BEGIN  //con less than
         SET con_ls = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_WIS_GR~ BEGIN  //wisdom greater than
         SET wis_gr = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_WIS_EQ~ BEGIN  //wisdom equal to
         SET wis_eq = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_WIS_LS~ BEGIN  //wisdom less than
         SET wis_ls = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_CON_GR~ BEGIN  //con greater than
         SET con_gr = %row%
      END
   END
BUT_ONLY

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////          WEAPON PROFICIENCIES           //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

APPEND ~splprot.2da~ ~B_SIM_EQ%TAB%89%TAB%-1%TAB%1~  //Simple weapons (equals)
APPEND ~splprot.2da~ ~B_SWD_EQ%TAB%90%TAB%-1%TAB%1~  //Sword (equals)
APPEND ~splprot.2da~ ~B_AXE_EQ%TAB%92%TAB%-1%TAB%1~  //Axe (equals)
APPEND ~splprot.2da~ ~B_GSD_EQ%TAB%93%TAB%-1%TAB%1~  //Greatsword (equals)
APPEND ~splprot.2da~ ~B_PAM_EQ%TAB%94%TAB%-1%TAB%1~  //Polearm (equals)
APPEND ~splprot.2da~ ~B_BNT_EQ%TAB%95%TAB%-1%TAB%1~  //Blunt (equals)
APPEND ~splprot.2da~ ~B_RNG_EQ%TAB%96%TAB%-1%TAB%1~  //Ranged (equals)


COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_SIM_EQ~ BEGIN  //simple equal
         SET sim_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_SWD_EQ~ BEGIN //sword equal
         SET swd_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_AXE_EQ~ BEGIN  //axe equal
         SET axe_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_GSD_EQ~ BEGIN  //greatsword equal
         SET gsd_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_PAM_EQ~ BEGIN  //polearm equal
         SET pam_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_BNT_EQ~ BEGIN  //blunt equal
         SET bnt_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_RNG_EQ~ BEGIN  //ranged equal
         SET rng_eq = %row%
      END
   END
BUT_ONLY

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////              ARMOR PROF                 //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


APPEND ~splprot.2da~ ~B_ARMOR_EQ%TAB%97%TAB%-1%TAB%1~  //Armors (equals)
APPEND ~splprot.2da~ ~B_ARMOR_LS%TAB%97%TAB%-1%TAB%2~  //Armors (less than)

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_ARMOR_EQ~ BEGIN
         SET arm_eq = %row%
      END
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_ARMOR_LS~ BEGIN
         SET arm_ls = %row%
      END
   END
BUT_ONLY

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////               ALCHEMY                   //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//for alchemy use
APPEND ~splprot.2da~ ~B_ALC_LS%TAB%101%TAB%-1%TAB%2~  //Alchemy/wpmace less than

//value found in parameter1 of your 326 effect

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_ALC_LS~ BEGIN  //less than alchemy
         SET alc_ls = %row%
      END
   END
BUT_ONLY


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////              ENDURANCE                  //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

APPEND ~splprot.2da~ ~B_END_EQ%TAB%98%TAB%-1%TAB%1~  //spear/endurance equal to
APPEND ~splprot.2da~ ~B_END_GR%TAB%98%TAB%-1%TAB%3~  //spear/endurance greater than



COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_END_EQ~ BEGIN  //con equal to
         SET end_eq = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_END_GR~ BEGIN  //con greater than
         SET end_gr = %row%
      END
   END
BUT_ONLY


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////                   HEAL                  //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//for heal use
APPEND ~splprot.2da~ ~B_HEA_EQ%TAB%99%TAB%-1%TAB%1~  //Heal (halberd) equal to
APPEND ~splprot.2da~ ~B_BJK_EQ%TAB%134%TAB%-1%TAB%1~  //Blackjack equal to
APPEND ~splprot.2da~ ~B_EXP_EQ%TAB%134%TAB%-1%TAB%1~  //Extraprof equal to
//value found in parameter1 of 326 effect


COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_BJK_EQ~ BEGIN  //blackjack equal to
         SET bjk_eq = %row%
      END
   END
BUT_ONLY


COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_HEA_EQ~ BEGIN  //wisdom equal to
         SET hea_eq = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_EXP_EQ~ BEGIN  //extra prof equal to
         SET exp_eq = %row%
      END
   END
BUT_ONLY



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////                 HERBALISM               //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

APPEND ~splprot.2da~ ~B_HRB_EQ%TAB%134%TAB%-1%TAB%1~  //Herb (flail) equal to
APPEND ~splprot.2da~ ~B_HRB_LS%TAB%39%TAB%-1%TAB%2~  //Herb (flail) Less than
//value found in parameter1 of 326 effect

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_HRB_EQ~ BEGIN  //herbalism equal to
         SET hrb_eq = %row%
      END
   END
BUT_ONLY

COPY_EXISTING ~splprot.2da~ ~override~
   COUNT_2DA_COLS cols // amount of columns
   READ_2DA_ENTRIES_NOW rows cols // read all file into memory
   FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
      READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
      PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~B_HRB_LS~ BEGIN  //herbalism less than
         SET hrb_ls = %row%
      END
   END
BUT_ONLY
*/